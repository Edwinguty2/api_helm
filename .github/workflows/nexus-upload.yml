name: Build, Upload and Update ArgoCD

on:
  push:
    branches:
      - main

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.10.3'

      - name: Package Helm chart
        run: |
          helm package myapihelm
          ls -l *.tgz

      - name: Upload chart to Nexus
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          # Obtener el nombre del archivo .tgz generado (ejemplo: myapihelm-0.1.0.tgz)
          CHART_FILE=$(ls -1 *.tgz)
          echo "Uploading $CHART_FILE to Nexus at ${NEXUS_URL}"
          # Subir el chart a Nexus; la URL final debe incluir el nombre del archivo
          curl -v -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --upload-file "$CHART_FILE" "${NEXUS_URL}${CHART_FILE}"

      - name: Extraer versión del chart
        id: chart-version
        run: |
          # Suponiendo que el nombre es myapihelm-<version>.tgz
          CHART_FILE=$(ls -1 *.tgz)
          echo "Chart file: $CHART_FILE"
          VERSION=$(echo $CHART_FILE | sed -E 's/.*-([0-9]+\.[0-9]+\.[0-9]+)\.tgz/\1/')
          echo "Version extraída: $VERSION"
          echo "::set-output name=version::$VERSION"

      - name: Actualizar manifiesto de ArgoCD
        run: |
          VERSION=${{ steps.chart-version.outputs.version }}
          echo "Actualizando targetRevision a $VERSION en argo-app.yaml"
          # Si tienes instalado y/o usas yq (versión 4.x) para manipular YAML:
          yq e ".spec.source.targetRevision = \"$VERSION\"" -i argo-app.yaml
          cat argo-app.yaml  # Para verificar el cambio (opcional)

      - name: Commit y push del manifiesto actualizado
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add argo-app.yaml
          git commit -m "Actualiza ArgoCD targetRevision a ${{ steps.chart-version.outputs.version }}"
          git push origin main
